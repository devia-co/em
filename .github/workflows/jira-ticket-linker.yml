# ... (previous parts of the workflow remain the same)

      - name: Extract and update Jira tickets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO: ${{ github.repository }}
        run: |
          python - <<EOF
          import re
          import os
          from github import Github

          def extract_jira_tickets(text):
              return re.findall(r'SCRUM-\d+', text)

          def create_jira_section(tickets):
              section = "Jira Tickets:\n\n"
              for ticket in tickets:
                  section += f"* [{ticket}](https://deviaco.atlassian.net/browse/{ticket})\n"
              return section + "\n"

          def clean_pr_body(body):
              # Remove any existing Jira Tickets section
              lines = body.split('\n')
              cleaned_lines = []
              skip = False
              for line in lines:
                  if line.strip() == "Jira Tickets:":
                      skip = True
                  elif skip and line.strip() == "":
                      skip = False
                  elif not skip:
                      cleaned_lines.append(line)
              return '\n'.join(cleaned_lines).strip()

          g = Github(os.environ['GITHUB_TOKEN'])
          repo = g.get_repo(os.environ['REPO'])
          pr = repo.get_pull(int(os.environ['PR_NUMBER']))

          # Extract tickets from PR title, branch name, and commit messages
          tickets = set()
          tickets.update(extract_jira_tickets(pr.title))
          tickets.update(extract_jira_tickets(pr.head.ref))
          for commit in pr.get_commits():
              tickets.update(extract_jira_tickets(commit.commit.message))

          # Sort tickets
          sorted_tickets = sorted(list(tickets))

          # Update PR title
          new_title = re.sub(r'\s*SCRUM-\d+', '', pr.title)  # Remove existing tickets from title
          new_title += ' ' + ' '.join(sorted_tickets)

          # Clean existing body and add new Jira section
          existing_body = pr.body or ""
          cleaned_body = clean_pr_body(existing_body)
          new_jira_section = create_jira_section(sorted_tickets)
          new_body = new_jira_section + cleaned_body

          # Update PR
          pr.edit(title=new_title, body=new_body)
          EOF
