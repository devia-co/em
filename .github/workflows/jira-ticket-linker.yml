name: Jira Ticket Linker

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:
  update-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyGithub

      - name: Extract and update Jira tickets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO: ${{ github.repository }}
        run: |
          python - <<EOF
          import re
          import os
          from github import Github

          def extract_jira_tickets(text):
              return re.findall(r'SCRUM-\d+', text)

          def remove_existing_jira_section(body):
              pattern = r'Jira Tickets:\n\n(?:\* \[SCRUM-\d+\].*\n)*\n---\n'
              return re.sub(pattern, '', body, flags=re.DOTALL)

          g = Github(os.environ['GITHUB_TOKEN'])
          repo = g.get_repo(os.environ['REPO'])
          pr = repo.get_pull(int(os.environ['PR_NUMBER']))

          # Extract tickets from PR title, branch name, and commit messages
          tickets = set()
          tickets.update(extract_jira_tickets(pr.title))
          tickets.update(extract_jira_tickets(pr.head.ref))
          for commit in pr.get_commits():
              tickets.update(extract_jira_tickets(commit.commit.message))

          # Sort tickets
          sorted_tickets = sorted(list(tickets))

          # Update PR title
          new_title = re.sub(r'\s*SCRUM-\d+', '', pr.title)  # Remove existing tickets from title
          new_title += ' ' + ' '.join(sorted_tickets)

          # Update PR body
          new_body = "Jira Tickets:\n\n"
          for ticket in sorted_tickets:
              new_body += f"* [{ticket}](https://deviaco.atlassian.net/browse/{ticket})\n"
          new_body += "\n---\n"
          
          # Remove existing Jira section and add the new one
          existing_body = pr.body or ""
          cleaned_body = remove_existing_jira_section(existing_body)
          new_body += cleaned_body

          # Update PR
          pr.edit(title=new_title, body=new_body)
          EOF
